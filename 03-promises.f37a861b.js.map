{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,MAAOC,SAASC,cAAc,uBAC9BC,KAAMF,SAASC,cAAc,sBAC7BE,OAAQH,SAASC,cAAc,wBAC/BG,OAAQJ,SAASC,cAAc,0BAMjC,SAASI,EAAcC,EAAUP,GAa/B,OAZgB,IAAIQ,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,uBAAqBF,QAAiBP,OAE5CU,EAAK,sBAAoBH,QAAeP,MAAU,GAErDA,EAAM,G,CAbbD,EAAKM,OAAOU,iBAAiB,SAqB7B,SAAkBC,GAChBA,EAAEC,iBAEF,IAAIjB,EAAQkB,OAAOnB,EAAKC,MAAMmB,OAC9B,MAAMhB,EAAOe,OAAOnB,EAAKI,KAAKgB,OACxBf,EAASc,OAAOnB,EAAKK,OAAOe,OAElC,IAAIC,EAAc,EAElB,KAAOA,IAAgBhB,GAAQ,CAC7BgB,GAAe,EACf,MAAMC,EAAUf,EAAcF,EAAQJ,GACtCA,GAASG,EAETkB,EACGC,MAAKH,GAAStB,EAAA0B,OAAOC,QAAQL,KAC7BM,OAAMC,GAAS7B,EAAA0B,OAAOI,QAAQD,I","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  submit: document.querySelector('button[type=\"submit\"]')\n}\n\nrefs.submit.addEventListener('click', onSubmit);\n\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n\n\n// refactor adding more functions + destructuring of refs items\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  let delay = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  const amount = Number(refs.amount.value);\n\n  let promisesCnt = 0;\n\n  while (promisesCnt !== amount) {\n    promisesCnt += 1;\n    const promise = createPromise(amount, delay);\n    delay += step;\n\n    promise\n      .then(value => Notify.success(value))\n      .catch(error => Notify.failure(error));\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","delay","document","querySelector","step","amount","submit","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","Number","value","promisesCnt","promise","then","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.f37a861b.js.map"}